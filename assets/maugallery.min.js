!function (r) {
    r.fn.mauGallery = function (e) { var e = r.extend(r.fn.mauGallery.defaults, e), i = []; return this.each(function () { r.fn.mauGallery.methods.createRowWrapper(r(this)), e.lightBox && r.fn.mauGallery.methods.createLightBox(r(this), e.lightboxId, e.navigation), r.fn.mauGallery.listeners(e), r(this).children(".gallery-item").each(function (a) { r.fn.mauGallery.methods.responsiveImageItem(r(this)), r.fn.mauGallery.methods.moveItemInRowWrapper(r(this)), r.fn.mauGallery.methods.wrapItemInColumn(r(this), e.columns); var t = r(this).data("gallery-tag"); e.showTags && void 0 !== t && -1 === i.indexOf(t) && i.push(t) }), e.showTags && r.fn.mauGallery.methods.showItemTags(r(this), e.tagsPosition, i), r(this).fadeIn(500) }) }, r.fn.mauGallery.defaults = { columns: 3, lightBox: !0, lightboxId: null, showTags: !0, tagsPosition: "bottom", navigation: !0 }, r.fn.mauGallery.listeners = function (a) { r(".gallery-item").on("click", function () { (a.lightBox && "IMG" === r(this).prop("tagName") || a.lightBox && "PICTURE" === r(this).prop("tagName")) && r.fn.mauGallery.methods.openLightBox(r(this), a.lightboxId) }), r(".gallery").on("click", ".nav-link", r.fn.mauGallery.methods.filterByTag), r(".gallery").on("click", ".mg-prev", () => r.fn.mauGallery.methods.prevImage(a.lightboxId)), r(".gallery").on("click", ".mg-next", () => r.fn.mauGallery.methods.nextImage(a.lightboxId)) }, r.fn.mauGallery.methods = {
        createRowWrapper(a) { a.children().first().hasClass("row") || a.append('<div class="gallery-items-row row"></div>') }, wrapItemInColumn(a, t) { var e; t.constructor === Number ? a.wrap(`<div class='item-column mb-4 col-${Math.ceil(12 / t)}'></div>`) : t.constructor === Object ? (e = "", t.xs && (e += " col-" + Math.ceil(12 / t.xs)), t.sm && (e += " col-sm-" + Math.ceil(12 / t.sm)), t.md && (e += " col-md-" + Math.ceil(12 / t.md)), t.lg && (e += " col-lg-" + Math.ceil(12 / t.lg)), t.xl && (e += " col-xl-" + Math.ceil(12 / t.xl)), a.wrap(`<div class='item-column mb-4${e}'></div>`)) : console.error(`Columns should be defined as numbers or objects. ${typeof t} is not supported.`) }, moveItemInRowWrapper(a) { a.appendTo(".gallery-items-row") }, responsiveImageItem(a) { "PICTURE" === a.prop("tagName") ? a.find("img").addClass("img-fluid") : "IMG" === a.prop("tagName") && a.addClass("img-fluid") }, openLightBox(a, t) { var e; "PICTURE" === a.prop("tagName") ? e = a.find("img").attr("src") : "IMG" === a.prop("tagName") && (e = a.attr("src")), r("#" + t).find(".lightboxImage").attr("src", e), r("#" + t).modal("toggle") }, prevImage(a) { let t = null, e = r("#" + a).find(".lightboxImage").attr("src"), i = (r(".gallery-item").each(function () { "IMG" === r(this).prop("tagName") && r(this).attr("src") === e ? t = r(this) : "PICTURE" === r(this).prop("tagName") && r(this).find("img").attr("src") === e && (t = r(this).find("img")) }), r(".tags-bar span.active-tag").data("images-toggle")), l = [], s = ("all" === i ? r(".item-column").each(function () { var a = r(this).children("img"); a.length ? l.push(a) : (a = r(this).children("picture")).length && l.push(a.find("img")) }) : r(".item-column").each(function () { var a = r(this).children("img"); a.length && a.data("gallery-tag") === i ? l.push(a) : (a = r(this).children("picture")).length && a.find("img").data("gallery-tag") === i && l.push(a.find("img")) }), 0); var n; r(l).each(function (a) { r(t).attr("src") === r(this).attr("src") && (s = a - 1) }), n = l[s] || l[l.length - 1], r("#" + a).find(".lightboxImage").attr("src", r(n).attr("src")) }, nextImage(a) { let t = null, e = r("#" + a).find(".lightboxImage").attr("src"), i = (r(".gallery-item").each(function () { "IMG" === r(this).prop("tagName") && r(this).attr("src") === e ? t = r(this) : "PICTURE" === r(this).prop("tagName") && r(this).find("img").attr("src") === e && (t = r(this).find("img")) }), r(".tags-bar span.active-tag").data("images-toggle")), l = [], s = ("all" === i ? r(".item-column").each(function () { var a = r(this).children("img"); a.length ? l.push(a) : (a = r(this).children("picture")).length && l.push(a.find("img")) }) : r(".item-column").each(function () { var a = r(this).children("img"); a.length && a.data("gallery-tag") === i ? l.push(a) : (a = r(this).children("picture")).length && a.find("img").data("gallery-tag") === i && l.push(a.find("img")) }), 0); var n; r(l).each(function (a) { r(t).attr("src") === r(this).attr("src") && (s = a + 1) }), n = l[s] || l[0], r("#" + a).find(".lightboxImage").attr("src", r(n).attr("src")) }, createLightBox(a, t, e) {
            a.append(`<div class="modal fade" id="${t || "galleryLightbox"}" tabindex="-1" role="dialog" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-body">
                            ${e ? '<div class="mg-prev" style="cursor:pointer;position:absolute;top:50%;left:-15px;background:white;"><</div>' : '<span style="display:none;" />'}
                            <img class="lightboxImage img-fluid" alt="Contenu de l'image affichÃ©e dans la modale au clique"/>
                            ${e ? '<div class="mg-next" style="cursor:pointer;position:absolute;top:50%;right:-15px;background:white;}">></div>' : '<span style="display:none;" />'}
                        </div>
                    </div>
                </div>
            </div>`)
        }, showItemTags(a, t, e) {
            var i = '<li class="nav-item"><span class="nav-link active active-tag"  data-images-toggle="all">Tous</span></li>', e = (r.each(e, function (a, t) {
                i += `<li class="nav-item active">
                <span class="nav-link"  data-images-toggle="${t}">${t}</span></li>`
            }), `<ul class="my-4 tags-bar nav nav-pills">${i}</ul>`); "bottom" === t ? a.append(e) : "top" === t ? a.prepend(e) : console.error("Unknown tags position: " + t)
        }, filterByTag() { var a; r(this).hasClass("active-tag") || (r(".active.active-tag").removeClass("active active-tag"), r(this).addClass("active-tag active"), a = r(this).data("images-toggle"), r(".gallery-item").each(function () { r(this).parents(".item-column").hide(), "all" !== a && r(this).data("gallery-tag") !== a || r(this).parents(".item-column").show(300) })) }
    }
}(jQuery);
